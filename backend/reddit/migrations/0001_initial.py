# Generated by Django 5.2 on 2025-08-20 06:36

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='RedditAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reddit_username', models.CharField(max_length=100)),
                ('refresh_token', models.CharField(max_length=255)),
                ('reddit_account_status', models.CharField(choices=[('active', 'Active'), ('suspended', 'Suspended'), ('shadow_banned', 'Shadow Banned'), ('banned', 'Banned')], db_index=True, default='active', help_text='The status of the Reddit account (e.g., active, suspended).', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reddit_accounts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'reddit_username')},
            },
        ),
        migrations.CreateModel(
            name='ScheduledPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subreddit', models.CharField(max_length=100)),
                ('title', models.CharField(max_length=300)),
                ('selftext', models.TextField()),
                ('cron_schedule', models.CharField(max_length=100)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('next_run', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('paused', 'Paused'), ('completed', 'Completed'), ('error', 'Error')], db_index=True, default='active', max_length=10)),
                ('last_submission_error', models.TextField(blank=True, null=True)),
                ('last_run_started', models.DateTimeField(blank=True, null=True)),
                ('last_run_finished', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('reddit_account', models.ForeignKey(help_text='Which Reddit account to use for posting', on_delete=django.db.models.deletion.CASCADE, related_name='scheduled_posts', to='reddit.redditaccount')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scheduled_posts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SubmittedPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reddit_post_id', models.CharField(db_index=True, max_length=20, unique=True)),
                ('reddit_url', models.URLField(blank=True, help_text='Full Reddit URL of the post', null=True)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('removed_at', models.DateTimeField(blank=True, help_text='When the post was removed', null=True)),
                ('removed_by', models.CharField(blank=True, help_text='Who removed the post (moderator, admin, etc.)', max_length=100, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('scheduled_post', models.ForeignKey(help_text='The scheduled post this submission came from', on_delete=django.db.models.deletion.CASCADE, related_name='submitted_posts', to='reddit.scheduledpost')),
            ],
            options={
                'ordering': ['-submitted_at'],
                'indexes': [models.Index(fields=['reddit_post_id'], name='reddit_subm_reddit__462dde_idx'), models.Index(fields=['submitted_at'], name='reddit_subm_submitt_e00fa3_idx')],
            },
        ),
    ]
