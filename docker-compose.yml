services:
  db:
    image: postgres:15-alpine
    container_name: schedularr-db
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-schedularr}
      POSTGRES_USER: ${POSTGRES_USER:-schedularr_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-schedularr_pass_dev}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U schedularr_user -d schedularr"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  redis:
    image: redis:7-alpine
    container_name: schedularr-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s

  worker:
    build:
      context: .
      dockerfile: docker/worker.Dockerfile
    container_name: schedularr-worker
    env_file:
      - backend/.env
    environment:
      - DEBUG=False
      - SECRET_KEY=${SECRET_KEY}
      - DATABASE_URL=${DATABASE_URL}
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND_URL=redis://redis:6379/0
      - REDDIT_CLIENT_ID=${REDDIT_CLIENT_ID}
      - REDDIT_CLIENT_SECRET=${REDDIT_CLIENT_SECRET}
      - REDDIT_USER_AGENT=${REDDIT_USER_AGENT}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  beat:
    build:
      context: .
      dockerfile: docker/beat.Dockerfile
    container_name: schedularr-beat
    env_file:
      - backend/.env
    environment:
      - DEBUG=False
      - SECRET_KEY=${SECRET_KEY}
      - DATABASE_URL=${DATABASE_URL}
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND_URL=redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  web:
    build:
      context: .
      dockerfile: docker/web.Dockerfile
    container_name: schedularr-web
    env_file:
      - backend/.env
    environment:
      - DEBUG=False
      - SECRET_KEY=${SECRET_KEY}
      - DATABASE_URL=${DATABASE_URL}
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND_URL=redis://redis:6379/0
      - REDDIT_CLIENT_ID=${REDDIT_CLIENT_ID}
      - REDDIT_CLIENT_SECRET=${REDDIT_CLIENT_SECRET}
      - REDDIT_REDIRECT_URI=${REDDIT_REDIRECT_URI:-http://localhost:8080/reddit/callback}
      - REDDIT_USER_AGENT=${REDDIT_USER_AGENT}
      - FRONTEND_URL=${FRONTEND_URL:-http://localhost:8080}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      worker:
        condition: service_started
      beat:
        condition: service_started
    restart: unless-stopped
    expose:
      - "8000"

  nginx:
    build:
      context: .
      dockerfile: docker/nginx.Dockerfile
    container_name: schedularr-nginx
    ports:
      - "8080:80"
    depends_on:
      - web
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  default:
    name: schedularr-network
