services:
  db:
    image: postgres:15-alpine
    container_name: schedularr-db
    env_file:
      - backend/.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: schedularr-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    restart: unless-stopped

  worker:
    build:
      context: .
      dockerfile: docker/worker.Dockerfile
    container_name: schedularr-worker
    env_file:
      - backend/.env
    restart: unless-stopped

  beat:
    build:
      context: .
      dockerfile: docker/beat.Dockerfile
    container_name: schedularr-beat
    env_file:
      - backend/.env
    restart: unless-stopped

  api:
    build:
      context: .
      dockerfile: docker/api.Dockerfile
    container_name: schedularr-api
    env_file:
      - backend/.env
    volumes:
      - static_volume:/app/staticfiles
    restart: unless-stopped
    expose:
      - "8000"

  nginx:
    build:
      context: .
      dockerfile: docker/nginx.Dockerfile
    container_name: schedularr-nginx
    volumes:
      - static_volume:/app/staticfiles
    ports:
      - "8085:80"
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  static_volume:

networks:
  default:
    name: schedularr-network
